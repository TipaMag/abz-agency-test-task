{"version":3,"sources":["assets/logo.svg","assets/menu-icon.svg","assets/man-laptop-v1.svg","assets/photo-cover.svg","api/api.jsx","components/Header/Header.jsx","elements/button/button.jsx","components/Banner/Banner.jsx","components/About/About.jsx","components/Users/Card/Card.jsx","components/Users/Users.jsx","components/common/Modal/Modal.jsx","components/utils/validators.js","components/Registration/Form/Form.jsx","components/Registration/Registration.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","url","api","getUsers","newUrl","modifiedURL","axios","get","data","users","links","console","log","getPositions","positions","getToken","token","userRegistration","formData","fetch","method","body","headers","then","res","json","catch","err","Header","useState","mobileMenu","setMobileMenu","useEffect","onWindowResize","window","addEventListener","innerWidth","document","style","overflow","className","src","logo","alt","activeClass","to","spy","smooth","offset","duration","onClick","menuIcon","Button","label","handleClick","styleType","type","position","disabled","classes","margin","scroller","scrollTo","delay","About","id","aboutImg","Card","user","isOverflowed","setIsOverflow","textElementRef","useRef","current","scrollWidth","clientWidth","key","photo","defaultPhoto","Tooltip","title","name","disableHoverListener","email","ref","phone","Users","usersData","getNewUsers","map","next_url","Modal","setModalIsOpen","_URL","URL","webkitURL","imageCheckResolution","file","a","image","Image","createObjectURL","Promise","resolve","onload","width","height","RegistrationForm","onHandleSubmit","useForm","mode","register","handleSubmit","errors","fileSelected","fileName","fileData","setFileData","onSubmit","FormData","append","position_id","placeholder","required","minLength","maxLength","pattern","value","accept","onChange","e","length","handleChange","target","files","validate","imageSize","size","maxSize","Math","round","imageResolution","Registration","getUsersData","modalIsOpen","setPositions","getPositionsData","success","App","setUsersData","sort","byField","field","b","Banner","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.0a5d12bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.146e2926.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu-icon.6f6bef28.svg\";","module.exports = __webpack_public_path__ + \"static/media/man-laptop-v1.3cdf7897.svg\";","module.exports = __webpack_public_path__ + \"static/media/photo-cover.3a41f082.svg\";","import axios from 'axios'\r\n\r\nconst url = 'https://frontend-test-assignment-api.abz.agency/api/v1'\r\n\r\nexport const api = {\r\n    async getUsers(newUrl) {\r\n        let modifiedURL = `${url}/users?page=1&count=6`\r\n        if (newUrl) {\r\n            modifiedURL = newUrl\r\n        }\r\n        try {\r\n            let { data: { users, links } } = await axios.get(modifiedURL)\r\n            return { users, links }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    },\r\n    async getPositions() {\r\n        try {\r\n            let { data: { positions } } = await axios.get(`${url}/positions`)\r\n            return positions\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    },\r\n    async getToken() {\r\n        try {\r\n            let { data: { token } } = await axios.get(`${url}/token`)\r\n            return { token }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    },\r\n    async userRegistration(formData) {\r\n        let { token } = await this.getToken()\r\n\r\n        return fetch(`${url}/users`, {\r\n            method: 'POST',\r\n            body: formData,\r\n            headers: {\r\n                'Token': token, // get token with GET api/v1/token method\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => res)\r\n            .catch(err => console.log(err))\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-scroll'\r\nimport \"./header.sass\"\r\nimport logo from '../../assets/logo.svg'\r\nimport menuIcon from '../../assets/menu-icon.svg'\r\n\r\n\r\nconst Header = () => {\r\n    let [mobileMenu, setMobileMenu] = useState(false)\r\n\r\n    useEffect(() => {\r\n        onWindowResize()\r\n    }, [])\r\n\r\n    const toggleMobileMenu = () => {\r\n        setMobileMenu(!mobileMenu)\r\n        if(!mobileMenu) {\r\n            document.body.style.overflow = 'hidden'\r\n        } else {\r\n            document.body.style.overflow = 'unset'\r\n        }\r\n    }\r\n\r\n    let onWindowResize = () => {\r\n        window.addEventListener('resize', () => {\r\n            if (window.innerWidth > 768) {\r\n                setMobileMenu(false)\r\n                document.body.style.overflow = 'unset'\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header__container\">\r\n\r\n                <div className=\"header__logo\">\r\n                    <img src={logo} alt=\"logo\" />\r\n                </div>\r\n\r\n                <div className={!mobileMenu ? \"menu\" : \"menu menu_active\"}>\r\n                    <nav className={!mobileMenu ? \"menu__body\" : \"menu__body menu__body_active\"}>\r\n                        <div className=\"menu__list\">\r\n                            <Link className=\"menu__link\" activeClass=\"menu__link_active\" to='about' spy={true} smooth={true} offset={50} duration={500}>\r\n                                About me\r\n                            </Link>\r\n                            <Link className=\"menu__link\" activeClass=\"menu__link_active\" to='relationships' spy={true} smooth={true} offset={50} duration={500}>\r\n                                Relationships\r\n                            </Link>\r\n                            <Link className=\"menu__link\" activeClass=\"menu__link_active\" to='requirements' spy={true} smooth={true} offset={50} duration={500}>\r\n                                Requirements\r\n                            </Link>\r\n                            <Link className=\"menu__link\" activeClass=\"menu__link_active\" to='users' spy={true} smooth={true} offset={50} duration={500}>\r\n                                Users\r\n                            </Link>\r\n                            <Link className=\"menu__link\" activeClass=\"menu__link_active\" to='signUp' spy={true} smooth={true} offset={50} duration={500}>\r\n                                Sign Up\r\n                            </Link>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n\r\n                <div className=\"menu-burger\" onClick={toggleMobileMenu}>\r\n                    <img className=\"menu-burger__icon\" src={menuIcon} alt=\"mobileMenu\" />\r\n                </div>\r\n\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header","import React from 'react'\r\nimport './button.sass'\r\n\r\nconst Button = ({ label, handleClick, styleType, type, position, disabled }) => {\r\n    const classes = `btn ${styleType}`\r\n    const styles = {\r\n        margin: '0 auto'\r\n    }\r\n\r\n    return (\r\n        <button className={classes} style={position && styles}\r\n            type={type}\r\n            onClick={handleClick} \r\n            disabled={disabled}\r\n        >\r\n            {label}\r\n        </button>\r\n    )\r\n}\r\nexport default Button","import React from 'react'\r\nimport { scroller } from 'react-scroll'\r\nimport \"./banner.sass\"\r\n\r\nimport Button from '../../elements/button/button'\r\n\r\n\r\nexport default () => {\r\n\r\n    const handleClick = () => {\r\n        scroller.scrollTo('signUp', {\r\n            duration: 500,\r\n            delay: 100,\r\n            smooth: true,\r\n            offset: 50, // Scrolls to element + 50 pixels down the page\r\n          })\r\n    }\r\n\r\n    return (\r\n        <section className=\"banner\">\r\n            <div className=\"banner__content\">\r\n                <h1 className=\"banner__title\">\r\n                    Test assignment <br />\r\n                    for Frontend <br />\r\n                    Developer position\r\n                </h1>\r\n                <p className=\"banner__description\">\r\n                    We kindly remind you that your test assignment should be submitted\r\n                    as a link to github/bitbucket repository. Please be patient, we consider\r\n                    and respond to every application that meets minimum requirements.\r\n                    We look forward to your submission. Good luck! The photo has to scale\r\n                    in the banner area on the different screens\r\n                </p>\r\n                <Button handleClick={handleClick}\r\n                    label='Sign up now'\r\n                    styleType='btn__primary'\r\n                />\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React from 'react'\r\nimport './about.sass'\r\nimport aboutImg from '../../assets/man-laptop-v1.svg'\r\nimport Button from '../../elements/button/button'\r\nimport { scroller } from 'react-scroll'\r\n\r\nconst About = () => {\r\n\r\n    const handleClick = () => {\r\n        scroller.scrollTo('signUp', {\r\n            duration: 500,\r\n            delay: 100,\r\n            smooth: true,\r\n            offset: 50, // Scrolls to element + 50 pixels down the page\r\n          })\r\n    }\r\n    \r\n    return (\r\n        <section className=\"about\" id=\"about\">\r\n            <h1 className=\"about__title\">Let's get acquainted</h1>\r\n            <div className=\"about__content\">\r\n                <div className=\"about__image\">\r\n                    <img src={aboutImg} alt=\"about\" />\r\n                </div>\r\n                <div className=\"about__text\">\r\n                    <h2 className=\"about__subtitle\">I am cool frontend developer</h2>\r\n                    <p className=\"about__description\">\r\n                        We will evaluate how clean your approach to writing CSS and Javascript\r\n                        code is. You can use any CSS and Javascript 3rd party libraries without any\r\n                        restriction.\r\n                    <br /><br />\r\n                        If 3rd party css/javascript libraries are added to the project via\r\n                        bower/npm/yarn you will get bonus points. If you use any task runner\r\n                        (gulp/webpack) you will get bonus points as well. Slice service directory\r\n                        page P​SD mockup​ into HTML5/CSS3.\r\n                    </p>\r\n                    <Button handleClick={handleClick}\r\n                        label=\"Sign up now\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default About","import React, { useState, useRef, useEffect } from 'react'\r\nimport './card.sass'\r\n\r\nimport defaultPhoto from '../../../assets/photo-cover.svg'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nconst Card = ({ user }) => {\r\n    const [isOverflowed, setIsOverflow] = useState(false)\r\n    const textElementRef = useRef()\r\n\r\n    useEffect(() => {\r\n        setIsOverflow(textElementRef.current.scrollWidth > textElementRef.current.clientWidth)\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"user-card\" key={user.id}>\r\n            <img className=\"user-card__image\" src={user.photo || defaultPhoto} alt=\"user-img\" />\r\n            <Tooltip title={user.name} disableHoverListener={!isOverflowed}>\r\n                <h2 className=\"user-card__name\">{user.name}</h2>\r\n            </Tooltip>\r\n            <p className=\"user-card__position\">{user.position}</p>\r\n            <Tooltip title={user.email} disableHoverListener={!isOverflowed}>\r\n                <p ref={textElementRef} className=\"user-card__email\" >{user.email}</p>\r\n            </Tooltip>\r\n            <p className=\"user-card__phone\">{user.phone}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport './users.sass'\r\n\r\nimport Card from './Card/Card'\r\nimport Button from '../../elements/button/button'\r\n\r\n\r\nconst Users = ({usersData, getNewUsers}) => {\r\n    \r\n    return (\r\n        <section className=\"users\" id=\"users\">\r\n            <h1 className=\"users__title\">Our cheerful users</h1>\r\n            <div className=\"users__list\">\r\n                {usersData.users\r\n                    && usersData.users.map(user => (\r\n                        <Card key={user.id} user={user} />\r\n                    ))\r\n                }\r\n            </div>\r\n            {usersData.links.next_url\r\n                && <Button handleClick={getNewUsers}\r\n                        label='Show more'\r\n                        styleType='btn__primary'\r\n                        position=\"center\"\r\n                    />\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Users","import React from 'react'\r\nimport './modal.sass'\r\n\r\nconst Modal = ({setModalIsOpen}) => {\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal__body\">\r\n                <h2 className=\"modal__title\">Congratulations</h2>\r\n                <p className=\"modal__description\">You have successfully passed the registration'</p>\r\n\r\n                <div className=\"modal__controls\">\r\n                    <button className=\"modal__btn\" onClick={() => setModalIsOpen(false)}>Great</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal","var _URL = window.URL || window.webkitURL\r\n\r\nexport const imageCheckResolution = async (file) => {\r\n    let image = new Image()\r\n    image.src = _URL.createObjectURL(file)\r\n    \r\n    let result = new Promise((resolve) => {\r\n        image.onload = () => {\r\n            resolve(image.width < 70 || image.height < 70)\r\n        } \r\n    })\r\n    result.then((res) => {\r\n        return res\r\n    })\r\n}\r\n\r\nexport const imageCheckSize = (size, maxSize) => {\r\n    const imgSize = Math.round(size / 1024)\r\n    return imgSize > maxSize ? false : true\r\n}","import React, { useState } from 'react'\r\nimport { useForm } from \"react-hook-form\"\r\nimport './form.sass'\r\nimport { imageCheckResolution, imageCheckSize } from '../../utils/validators'\r\nimport Button from '../../../elements/button/button'\r\n\r\nconst RegistrationForm = ({ positions, onHandleSubmit }) => {\r\n    const { register, handleSubmit, errors } = useForm({ mode: 'onChange' })\r\n\r\n    let [fileData, setFileData] = useState({\r\n        fileSelected: false,\r\n        fileName: ''\r\n    })\r\n\r\n    let handleChange = (fileData) => {\r\n        if (fileData?.length) {\r\n            let fileName = fileData[0].name\r\n            setFileData({\r\n                fileSelected: true,\r\n                fileName: fileName,\r\n            })\r\n        } else {\r\n            setFileData({ fileSelected: false, fileName: '' })\r\n        }\r\n    }\r\n\r\n    const onSubmit = data => {\r\n        var formData = new FormData()\r\n        formData.append('position_id', data.position_id)\r\n        formData.append('name', data.name)\r\n        formData.append('email', data.email)\r\n        formData.append('phone', data.phone)\r\n        formData.append('photo', data.photo[0])\r\n\r\n        onHandleSubmit(formData)\r\n    }\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <div className=\"form__control\">\r\n                <label className=\"form__label\">Name</label>\r\n                <input className=\"form__input\" name=\"name\" type=\"text\" placeholder='Your name'\r\n                    ref={register({\r\n                        required: true,\r\n                        minLength: 2,\r\n                        maxLength: 60\r\n                    })}/>\r\n                {errors.name?.type === \"required\" && <span className=\"error\">name is required</span>}\r\n                {errors.name?.type === \"minLength\" && <span className=\"error\">min 2 characters</span>}\r\n                {errors.name?.type === \"maxLength\" && <span className=\"error\">60 characters max</span>}\r\n            </div>\r\n\r\n            <div className=\"form__control\">\r\n                <label className=\"form__label\">Email</label>\r\n                <input className=\"form__input\" name=\"email\" type=\"email\" placeholder='Your email'\r\n                    ref={register({\r\n                            required: true,\r\n                            pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n                    })}/>\r\n                {errors.email?.type === \"required\" && <span className=\"error\">email is required</span>}\r\n                {errors.email?.type === \"pattern\" && <span className=\"error\">email is not correct</span>}\r\n            </div>\r\n            \r\n            <div className=\"form__control\">\r\n                <label className=\"form__label\">Phone number</label>\r\n                <input className=\"form__input\" name=\"phone\" type=\"tel\" placeholder='+380 XX XXX XX XX'\r\n                    ref={register({\r\n                        required: true,\r\n                        pattern: /^\\+38(0\\d{9})$/ // /^\\+?3?8?(0\\d{9})$/\r\n                    })}/>\r\n                {errors.phone?.type === \"required\" && <span className=\"error\">phone is required</span>}\r\n                {errors.phone?.type === \"pattern\" && <span className=\"error\">phone format error</span>}\r\n\r\n                <span className=\"form__description\">Enter phone number in open format</span>\r\n            </div>\r\n                \r\n            \r\n\r\n            <div className=\"positions\">\r\n                <p className=\"positions__title\">Select your position</p>\r\n                {positions\r\n                    && positions.map(position => (\r\n                        <label className=\"positions__radio\" key={position.id}>\r\n                            <input type=\"radio\" name=\"position_id\" value={position.id}\r\n                                ref={register({\r\n                                    required: true\r\n                                })}/>\r\n                            <span className='checkmark'></span>\r\n                            {position.name}\r\n                        </label>\r\n                    ))\r\n                }\r\n                {errors.position_id?.type === \"required\" && <span className=\"error\">position is required</span>}\r\n            </div>\r\n\r\n            <div className=\"loadphoto\">\r\n                <p className=\"loadphoto__title\">Photo</p>\r\n                <div className=\"loadphoto__container\">\r\n                    <span className=\"loadphoto__filename\">{!fileData.fileSelected ? 'Upload your photo' : fileData.fileName}</span>\r\n                    <label className=\"loadphoto__lable\">Browse\r\n                        <input className=\"loadphoto__input\" name=\"photo\" type=\"file\" accept=\"image/jpeg, image/jpg\"\r\n                            onChange={e => handleChange(e.target.files)}\r\n                            ref={register({\r\n                                required: true,\r\n                                validate: {\r\n                                    imageSize: value => imageCheckSize(value[0].size, 5120),\r\n                                    imageResolution: async value => console.log(await imageCheckResolution(value[0]))\r\n                                }\r\n                            })}/>\r\n                    </label>\r\n                </div>\r\n                {errors.photo?.type === \"required\" && <span className=\"error\">photo is required</span>}\r\n                {errors.photo?.type === \"imageSize\" && <span className=\"error\">5 mb maximum</span>}\r\n                {errors.photo?.type === \"imageResolution\" && <span className=\"error\">min resolution 70x70 px</span>}\r\n            </div>\r\n\r\n            <Button\r\n                label='Sign up now'\r\n                styleType='btn__primary'\r\n                type='submit'\r\n                position=\"center\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RegistrationForm","import React, { useState, useEffect } from 'react'\r\nimport { api } from '../../api/api'\r\nimport './registration.sass'\r\n\r\nimport Modal from '../common/Modal/Modal'\r\nimport RegistrationForm from './Form/Form'\r\n\r\nconst Registration = ({getUsersData}) => {\r\n    let [modalIsOpen, setModalIsOpen] = useState(false)\r\n    let [positions, setPositions] = useState([])\r\n\r\n    useEffect(() => {\r\n        const getPositionsData = async () => {\r\n            setPositions(await api.getPositions())\r\n        }\r\n        getPositionsData()\r\n    }, [])\r\n\r\n    const onHandleSubmit = async (formData) => {\r\n        let response = await api.userRegistration(formData)\r\n        if (response.success) {\r\n            getUsersData()\r\n            setModalIsOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"registration\" id=\"signUp\">\r\n            <h1 className=\"registration__title\">Register to get a work</h1>\r\n            <RegistrationForm positions={positions} onHandleSubmit={onHandleSubmit}/>\r\n            {modalIsOpen\r\n                && <Modal setModalIsOpen={setModalIsOpen}></Modal>\r\n            }\r\n        </section>\r\n    )\r\n}\r\nexport default Registration","import React, { useState, useEffect } from 'react'\nimport './App.sass'\nimport { api } from './api/api'\nimport Header from './components/Header/Header'\nimport Banner from './components/Banner/Banner'\nimport About from './components/About/About'\nimport Users from './components/Users/Users'\nimport Registration from './components/Registration/Registration'\n\nconst App = () => {\n\n  let [usersData, setUsersData] = useState({\n    users: [],\n    links: {},\n  })\n  useEffect(() => {\n    getUsersData()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const getUsersData = async () => {\n    const { users, links } = await api.getUsers()\n    setUsersData({\n      users: users.sort(byField(\"registration_timestamp\")),\n      links: links\n    })\n  }\n  const getNewUsers = async () => {\n    const { users, links } = await api.getUsers(usersData.links.next_url)\n    setUsersData({\n      users: [...usersData.users, ...users].sort(byField(\"registration_timestamp\")),\n      links: links\n    })\n  }\n  const byField = (field) => {\n    return (a, b) => a[field] < b[field] ? 1 : -1;\n  }\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <Banner />\n      <About />\n      <Users usersData={usersData} getNewUsers={getNewUsers} />\n      <Registration getUsersData={getUsersData}/>\n    </div>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}